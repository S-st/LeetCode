21. Merge Two Sorted Lists 

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.


------------------------------------------------------------------------------------------------------------------------------------------------
合并两个有序链表。理解题意之后发现还是很简单的。


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode head(-1); //head pointer
        ListNode* t=&head;
        while(l1&&l2){
            if(l1->val>l2->val){ //if l1>l2，把l2接入head后
                t->next=l2;
                l2=l2->next;//l2后移
            }
            else {
                t->next=l1;//if l1<l2,把l1接入head后
                l1=l1->next;//l1后移
            }
            t=t->next;//t后移
        }
        if(l1) t->next=l1;//此时l1或者l2如果还有未接入新表的数据，就把新表指针指到未接入表。
        if(l2) t->next=l2;
        return head.next;
    }
};